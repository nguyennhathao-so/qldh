<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f5m8fLf/Bxe42dseC67NAAAAAElFTkSuQmCC
</value>
  </data>
</root>